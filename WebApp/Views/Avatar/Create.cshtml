@using Core.Domain.Enums
@model Core.BLL.DTO.Entities.Avatar

@{
    ViewData["Title"] = "Create";
}

<h1>@Shared.Resources.SharedRes.Create</h1>

<h4>@Core.Resources.Domain.DomainEntities.Avatar</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="avatarForm" asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Sex" class="control-label"></label>
                <select asp-for="Sex" asp-items="@Html.GetEnumSelectList<ESex>()" class="form-control"></select>
                <span asp-validation-for="Sex" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UploadedImage" class="control-label"></label>
                <input asp-for="UploadedImage" type="file" class="form-control" />
                <span asp-validation-for="UploadedImage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Shared.Resources.SharedRes.BackToList</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
